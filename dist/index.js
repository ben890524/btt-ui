(()=>{"use strict";class s extends MutationObserver{constructor(s){super((t=>{const e=t[0];!function(s,t){var e,a,i;const c=null!==(e=t.attributeName)&&void 0!==e?e:"",l=null!==(a=t.oldValue)&&void 0!==a?a:"";""!==l&&s.classList.remove(l);const o=null!==(i=s.getAttribute(c))&&void 0!==i?i:"";""!==o&&s.classList.add(o),s.hasAttribute("text-bold")?s.classList.add("bold"):s.classList.remove("bold")}(s,e)}))}}const t=s;class e extends HTMLElement{constructor(s){super(),this.name="ViewComponent",this.name=s,this.init()}init(){this.tabIndex=1,this.selfAttrubutesCheck(),this.initObserver(),console.log(`Custom Tag ${this.name} init.`)}selfAttrubutesCheck(){var s;(function(s){s.hasAttribute("text-bold")?s.classList.add("bold"):s.classList.remove("bold")})(s=this),function(s){s.hasAttribute("animation")&&""!==s.getAttribute("animation")&&s.classList.add(s.getAttribute("animation"))}(s)}initObserver(){new t(this).observe(this,{attributeOldValue:!0,attributeFilter:["text-bold","animation"]})}}const a=e;class i extends HTMLElement{constructor(){super(),this.name="Container",this.init()}init(){console.log(`Custom Tag ${this.name} init.`)}}const c=i;class l extends HTMLElement{constructor(){super(),this.name="Row",this.init()}init(){console.log(`Custom Tag ${this.name} init.`)}}const o=l;class n extends MutationObserver{constructor(){super((s=>{var t;const e=s[0].target;for(let s=1;s<=12;s++)e.classList.remove(`col-${s}`);switch(null!==(t=parseInt(e.getAttribute("col")))&&void 0!==t?t:0){case 1:e.classList.add("col-1");break;case 2:e.classList.add("col-2");break;case 3:e.classList.add("col-3");break;case 4:e.classList.add("col-4");break;case 5:e.classList.add("col-5");break;case 6:e.classList.add("col-6");break;case 7:e.classList.add("col-7");break;case 8:e.classList.add("col-8");break;case 9:e.classList.add("col-9");break;case 10:e.classList.add("col-10");break;case 11:e.classList.add("col-11");break;case 12:e.classList.add("col-12")}}))}}const r=n;class d extends HTMLElement{constructor(){super(),this.name="Col",this.init()}init(){this.selfAttrubutesCheck(),this.initObserver(),console.log(`Custom Tag ${this.name} init.`)}initObserver(){(new r).observe(this,{attributeFilter:["col"]})}selfAttrubutesCheck(){this.checkColumn()}checkColumn(){var s;switch(null!==(s=parseInt(this.getAttribute("col")))&&void 0!==s?s:0){case 1:this.classList.add("col-1");break;case 2:this.classList.add("col-2");break;case 3:this.classList.add("col-3");break;case 4:this.classList.add("col-4");break;case 5:this.classList.add("col-5");break;case 6:this.classList.add("col-6");break;case 7:this.classList.add("col-7");break;case 8:this.classList.add("col-8");break;case 9:this.classList.add("col-9");break;case 10:this.classList.add("col-10");break;case 11:this.classList.add("col-11");break;case 12:this.classList.add("col-12")}}}const b=d;customElements.define("b-button",class extends a{constructor(){super("Button")}}),customElements.define("b-container",c),customElements.define("b-row",o),customElements.define("b-col",b)})();